"use client";
import { motion, AnimatePresence} from "framer-motion";
import React, { useState } from "react";
import { Image } from "@nextui-org/react";
import "swiper/css";
import "swiper/css/pagination";
interface SectionsA2prop {
  awardData : awardsData[];
}

const SectionsA2 = ({awardData}:SectionsA2prop) => {
 
  const [openIndex, setOpenIndex] = useState<number | null>(null); // Store the index of the currently open accordion item

  const backgroundGradient = {
    background:
      "var(--L01, linear-gradient(239deg, #FFDAA9 31.09%, #FDB478 83.44%))",
    backgroundClip: "text",
    WebkitBackgroundClip: "text",
    WebkitTextFillColor: "transparent",
  };
  const containerVariants = {
    open: {
      height: "auto",
      opacity: 1, // Ensure full opacity when open
      transition: { duration: 0.5, ease: [0.645, 0.045, 0.355, 1] },
    },
    closed: {
      height: 0,
      opacity: 0, // Set opacity to 0 for a fade effect
      transition: { duration: 0.5, ease: [0.645, 0.045, 0.355, 1] },
    },
  };

  const toggleAccordion = (index: number) => {
    setOpenIndex((prevIndex) => (prevIndex === index ? null : index)); // If clicking on the currently open item, close it. Otherwise, open the clicked item.
  };
  return (
    <>
      <div className="items-center flex flex-col justify-center h-auto px-4 max-md:px-5 ">
        <div className="w-full max-w-[1128px]  max-md:max-w-full max-md:my-10 ">
          <div className="md:py-40 py-20">
            <div
              className="text-center font-ClashGrotesk-Medium md:text-[48px]  md:leading-[57.6px] capitalize text-[25px] leading-[35px] font-medium"
              style={{
                background:
                  "var(--l02, linear-gradient(239deg, #FF6572 31.09%, #A7426F 83.44%))",
                backgroundClip: "text",
                WebkitBackgroundClip: "text",
                WebkitTextFillColor: "transparent",
              }}
            >
              Awards & Recognition
            </div>
            <div className="flex flex-col md:gap-[45px] gap-[28px] md:mt-11 mt-7">
              {/* the data is passed to the awardAccordin */}
              {awardData?.sort((a: any, b: any) => a.attributes.Year - b.attributes.Year).map((data:awardsData, index:number) => ( 
   
                <div
                  className="w-full h-full md:rounded-3xl rounded-[14px] transition-opacity hover:cursor-pointer"
                  onClick={() => {
                    toggleAccordion(index);
                  }}
                  style={{
                    background:
                      "linear-gradient(117.75deg, rgba(255, 255, 255, 0.02) 32.76%, rgba(255, 223, 180, 0.1) 91.01%)",
                  }}
                >
                  <AnimatePresence>
                    <div className="flex p-4">
                      <div className="sm:w-1/5  flex items-center ">
                        <Image
                          className="p-2.5 rounded-3xl md:h-[109px] md:w-[109px]  w-[104px] h-[104px] object-cover"
                          src={`${data.attributes.ImageThumb.data[0].attributes.url}`}
                          width={109}
                          height={109}
                        />
                        <div className="px-2" />
                          
                        <div className="w-auto hidden  md:flex flex-col justify-center items-center">
                          <div className="w-auto text-white text-[30px] font-medium font-ClashGrotesk-Medium leading-[27px]">
                            {data.attributes.Year}
                          </div>
                        </div>
                      </div>
                      <div className="w-3/5 flex flex-col items-center justify-center h-auto">
                        <div
                          className=" md:text-[30px] text-center w-auto md:font-medium font-ClashGrotesk-Medium md:leading-[53.2px] text-lg font-medium  leading-[25.20px]"
                          style={{
                            background:
                              "var(--l02, linear-gradient(239deg, #FF6572 31.09%, #A7426F 83.44%))",
                            backgroundClip: "text",
                            WebkitBackgroundClip: "text",
                            WebkitTextFillColor: "transparent",
                          }}
                        >
                          {data.attributes.movieName}
                        </div>
                      </div>
                      <div className="w-1/5  ">
                        <div className=" w-full h-full ">
                          <div className="md:flex w-full justify-end  gap-2 hidden">
                            <div className="flex items-center ">
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="40"
                                height="108"
                                viewBox="0 0 45 108"
                                fill="none"
                              >
                                <path
                                  d="M0.512704 56.6061C1.89747 57.153 3.38133 57.5361 4.64922 58.2796C7.13671 59.7414 8.90007 61.9442 10.2899 64.4394C10.4297 64.6889 10.5872 64.9309 10.7473 65.1955C10.5669 62.786 10.4068 60.4244 10.2086 58.0654C10.1171 56.9614 9.5988 56.3238 8.49607 55.7416C7.23327 55.0737 6.00349 53.9345 5.30222 52.697C3.14757 48.8912 2.38023 44.7023 2.57842 40.3446C2.59367 39.9842 2.71817 39.6288 2.83759 39.0592C7.12655 41.9274 9.46414 45.8012 10.511 50.5698C10.7269 48.5182 11.0217 46.4691 11.1182 44.41C11.1487 43.7295 10.8692 42.8095 10.3865 42.3685C6.94869 39.2331 6.67936 35.1753 6.96648 31.0016C7.10368 29.013 7.60423 27.0496 7.96503 25.0787C8.00569 24.8594 8.2115 24.6679 8.40714 24.3579C11.8398 27.967 13.1281 32.1736 12.9172 36.9849C13.5956 35.0669 14.3858 33.1767 14.8889 31.2133C15.0616 30.5403 14.5535 29.6683 14.274 28.9172C13.7836 27.6041 12.8536 26.3389 12.7723 25.0132C12.5157 20.7689 13.3999 16.6884 15.3767 12.8776C15.58 12.4869 15.8671 12.1416 16.2406 11.5871C17.6381 13.7068 18.3038 15.8592 18.4207 18.0998C18.535 20.3202 18.3038 22.5583 18.225 24.7258C19.3252 23.0498 20.5575 21.3133 21.6145 19.4734C21.922 18.9365 22.0109 17.9234 21.7009 17.452C20.0544 14.9619 20.4533 12.381 21.2105 9.81531C22.2116 6.4128 24.1096 3.54713 27.0951 0.976351C28.1699 5.89612 27.4585 10.2891 25.5173 14.4578C27.0037 13.059 28.5561 11.6149 30.0806 10.1404C30.2661 9.96149 30.3957 9.6288 30.3932 9.3692C30.3627 7.29493 31.4502 5.78019 32.9035 4.49479C35.3046 2.37012 38.3943 1.74507 41.5856 0.5C40.9885 3.0733 40.0789 5.08708 38.5823 6.82362C36.7885 8.90545 34.5271 10.0295 31.7983 10.6395C30.3906 10.9545 29.2193 12.3105 28.0353 13.3211C31.534 12.7692 36.3566 13.0716 37.9293 14.1428C36.2219 16.6077 33.9478 18.251 30.9547 18.5938C29.542 18.7551 28.0124 18.5484 26.6276 18.1703C24.5441 17.6033 24.3561 17.5377 23.078 19.3348C22.3768 20.3227 21.7111 21.3359 21.086 22.4424C24.3281 20.6076 27.8803 20.8268 31.4451 20.5949C31.4451 20.8671 31.5061 21.0612 31.4375 21.1797C29.4683 24.5771 26.7521 27.0017 22.6893 27.5209C21.7466 27.6419 20.7582 27.4478 19.7953 27.3672C18.7052 27.2765 17.9633 27.6117 17.5466 28.7181C16.9165 30.3942 16.1593 32.0248 15.5342 33.7437C18.3952 31.1679 22.0541 30.3261 25.3826 28.8038C25.4868 28.8945 25.5935 28.9853 25.6977 29.076C25.2657 30.0816 24.8668 31.1049 24.3942 32.0929C23.2788 34.4242 21.9779 36.6674 19.6911 38.0359C18.5325 38.729 17.1833 39.218 15.8544 39.5003C13.8065 39.9363 13.4609 40.0951 13.0595 42.1089C12.6834 43.9891 12.3709 45.8819 12.1803 47.8503C14.18 44.0722 17.8032 42.0635 20.8446 39.4474C20.9793 39.4927 21.1165 39.5356 21.2512 39.5809C21.1038 40.831 21.0403 42.0963 20.7938 43.3262C20.062 46.9606 18.4613 50.1337 15.4606 52.4701C14.838 52.954 14.0936 53.2918 13.3796 53.6471C12.1066 54.2772 11.5019 55.2451 11.601 56.6792C11.7407 58.6829 11.8221 60.6916 12.0634 62.7507C13.3262 58.2972 16.5709 55.1493 19.0889 51.5351C19.2439 51.5502 19.3989 51.5653 19.5513 51.5804C19.6784 52.6516 19.8994 53.7202 19.9198 54.7939C19.9833 58.0805 19.3303 61.2335 17.5898 64.0538C16.8301 65.2837 15.8036 66.3776 14.7771 67.4134C13.6159 68.5829 13.0239 69.7397 13.6845 71.4259C14.4518 73.3943 15.0108 75.4408 15.613 77.311C16.078 75.1283 16.4134 72.8776 17.0588 70.7177C17.6991 68.5703 18.6519 66.5137 19.4649 64.4167C19.6123 64.3965 19.7597 64.3764 19.9045 64.3562C20.3517 65.5206 20.9259 66.6523 21.2232 67.8545C22.392 72.5474 22.0998 77.0766 19.4167 81.2755C18.6188 82.5231 18.4816 83.7051 19.4777 84.9804C20.4228 86.1902 21.2004 87.526 22.1913 88.761C21.2969 84.3201 22.4886 80.0456 22.7731 75.3577C23.3321 75.8113 23.6828 76.0054 23.9089 76.2927C27.5372 80.9428 28.7137 86.0718 26.9097 91.7603C26.4904 93.0809 26.6251 94.1622 27.8853 95.0544C29.5496 96.2314 31.1097 97.5496 32.807 98.7115C30.2509 94.8452 30.2763 90.4068 29.3514 85.8727C31.9405 86.8859 33.6404 88.3829 35.0023 90.2783C36.7428 92.7004 37.6321 95.3896 37.5762 98.3964C37.5228 101.275 37.5558 101.3 40.2923 102.273C41.6644 102.762 43.0797 103.135 44.5102 103.568C44.2434 104.74 43.7174 105.143 42.5944 104.733C41.4103 104.299 40.178 103.992 38.9711 103.616C37.9395 103.296 37.1036 103.43 36.4734 104.428C35.5206 105.937 34.0241 106.736 32.3395 107.109C28.7162 107.913 25.1997 107.472 21.8508 105.892C21.2639 105.615 20.7837 105.123 20.1052 104.624C23.7234 101.496 27.6033 99.7927 32.5072 100.602C30.6193 99.1702 28.9195 97.8117 27.1282 96.5817C26.7521 96.3247 25.8323 96.312 25.5173 96.5868C23.4236 98.4115 21.02 98.414 18.5782 97.7966C15.2903 96.9648 12.3328 95.4879 10.168 92.7634C10.018 92.5743 9.91133 92.3475 9.78937 92.1459C11.8703 90.3867 17.6228 89.3709 22.6207 92.0022C21.1724 89.9582 19.8257 87.9595 18.3622 86.0466C17.8896 85.4291 17.1858 85.1518 16.233 85.5072C14.3782 86.1953 12.5233 85.792 10.8718 84.8393C7.63472 82.9742 5.33525 80.2371 3.82344 76.8497C3.68877 76.5473 3.61509 76.2121 3.53886 75.8869C3.50329 75.7307 3.53378 75.5593 3.53378 75.219C8.06667 75.3375 12.1168 76.4036 15.1658 80.0405C14.1164 77.2353 13.095 74.4201 12.0025 71.6325C11.7153 70.8991 11.1411 70.5034 10.2137 70.5412C8.38427 70.6143 7.02746 69.6288 5.8358 68.3561C3.24412 65.5862 1.65863 62.2996 0.731218 58.6677C0.682942 58.4762 0.578767 58.2972 0.5 58.1133C0.5 57.6092 0.5 57.1076 0.5 56.6035L0.512704 56.6061Z"
                                  fill="white"
                                />
                              </svg>
                              <div className="flex flex-col justify-center items-center ">
                                <div className="w-[67px] h-auto text-center text-white text-[30px] font-medium font-ClashGrotesk-Medium leading-[27px]">
                                  {data.attributes.Sponser.length}
                                </div>
                              </div>
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="40"
                                height="108"
                                viewBox="0 0 45 108"
                                fill="none"
                              >
                                <path
                                  d="M44.5078 56.6061C43.123 57.153 41.6392 57.5361 40.3713 58.2796C37.8838 59.7414 36.1204 61.9442 34.7306 64.4394C34.5908 64.6889 34.4333 64.9309 34.2732 65.1955C34.4536 62.786 34.6137 60.4244 34.8119 58.0654C34.9034 56.9614 35.4217 56.3238 36.5244 55.7416C37.7872 55.0737 39.017 53.9345 39.7183 52.697C41.8729 48.8912 42.6403 44.7023 42.4421 40.3446C42.4268 39.9842 42.3023 39.6288 42.1829 39.0592C37.894 41.9274 35.5564 45.8012 34.5095 50.5698C34.2936 48.5182 33.9988 46.4691 33.9023 44.41C33.8718 43.7295 34.1513 42.8095 34.634 42.3685C38.0718 39.2331 38.3411 35.1753 38.054 31.0016C37.9168 29.013 37.4163 27.0496 37.0555 25.0787C37.0148 24.8594 36.809 24.6679 36.6134 24.3579C33.1807 27.967 31.8925 32.1735 32.1033 36.9849C31.4249 35.0669 30.6347 33.1767 30.1316 31.2133C29.9589 30.5403 30.467 29.6683 30.7465 28.9172C31.2369 27.6041 32.1669 26.3389 32.2482 25.0132C32.5048 20.7689 31.6206 16.6884 29.6438 12.8776C29.4405 12.4869 29.1534 12.1416 28.7799 11.5871C27.3824 13.7068 26.7167 15.8592 26.5999 18.0998C26.4855 20.3202 26.7167 22.5583 26.7955 24.7258C25.6953 23.0498 24.463 21.3133 23.406 19.4734C23.0986 18.9365 23.0096 17.9234 23.3196 17.452C24.9661 14.9619 24.5672 12.381 23.81 9.8153C22.8089 6.4128 20.9109 3.54713 17.9254 0.976351C16.8506 5.89612 17.562 10.2891 19.5032 14.4578C18.0168 13.059 16.4644 11.6149 14.9399 10.1404C14.7544 9.96149 14.6248 9.6288 14.6273 9.3692C14.6578 7.29493 13.5703 5.78019 12.117 4.49479C9.71587 2.37012 6.62619 1.74507 3.43487 0.5C4.03197 3.0733 4.9416 5.08708 6.43816 6.82362C8.232 8.90545 10.4934 10.0295 13.2222 10.6395C14.6299 10.9545 15.8012 12.3105 16.9853 13.3211C13.4865 12.7692 8.66395 13.0716 7.09116 14.1428C8.79862 16.6077 11.0727 18.251 14.0658 18.5938C15.4785 18.7551 17.0081 18.5484 18.3929 18.1703C20.4764 17.6033 20.6644 17.5377 21.9425 19.3348C22.6437 20.3227 23.3094 21.3359 23.9345 22.4424C20.6924 20.6075 17.1402 20.8268 13.5754 20.5949C13.5754 20.8671 13.5144 21.0612 13.583 21.1797C15.5522 24.5771 18.2684 27.0017 22.3312 27.5209C23.2739 27.6419 24.2623 27.4478 25.2252 27.3672C26.3153 27.2765 27.0572 27.6117 27.4739 28.7181C28.104 30.3942 28.8612 32.0248 29.4863 33.7437C26.6253 31.1679 22.9664 30.3261 19.6379 28.8038C19.5337 28.8945 19.427 28.9853 19.3228 29.076C19.7548 30.0816 20.1537 31.1049 20.6263 32.0929C21.7417 34.4242 23.0427 36.6674 25.3294 38.0359C26.4881 38.729 27.8372 39.218 29.1661 39.5003C31.214 39.9363 31.5596 40.0951 31.9611 42.1089C32.3371 43.9891 32.6496 45.8819 32.8402 47.8503C30.8405 44.0722 27.2173 42.0635 24.1759 39.4473C24.0412 39.4927 23.904 39.5356 23.7693 39.5809C23.9167 40.831 23.9802 42.0963 24.2267 43.3262C24.9585 46.9606 26.5592 50.1337 29.5599 52.4701C30.1825 52.954 30.9269 53.2918 31.6409 53.6471C32.9139 54.2772 33.5186 55.2451 33.4195 56.6792C33.2798 58.6829 33.1985 60.6916 32.9571 62.7507C31.6943 58.2972 28.4496 55.1493 25.9316 51.5351C25.7766 51.5502 25.6216 51.5653 25.4692 51.5804C25.3421 52.6516 25.1211 53.7202 25.1007 54.7939C25.0372 58.0805 25.6902 61.2335 27.4307 64.0538C28.1904 65.2837 29.2169 66.3775 30.2434 67.4134C31.4046 68.5829 31.9966 69.7397 31.336 71.4259C30.5687 73.3943 30.0097 75.4408 29.4075 77.3109C28.9425 75.1283 28.6071 72.8776 27.9618 70.7176C27.3215 68.5703 26.3686 66.5137 25.5556 64.4167C25.4082 64.3965 25.2608 64.3764 25.116 64.3562C24.6688 65.5206 24.0946 66.6523 23.7973 67.8545C22.6285 72.5474 22.9207 77.0765 25.6038 81.2755C26.4017 82.5231 26.5389 83.7051 25.5429 84.9804C24.5977 86.1902 23.8202 87.526 22.8292 88.761C23.7236 84.3201 22.5319 80.0456 22.2474 75.3577C21.6884 75.8113 21.3377 76.0054 21.1116 76.2927C17.4833 80.9428 16.3068 86.0718 18.1109 91.7602C18.5301 93.0809 18.3954 94.1622 17.1352 95.0544C15.4709 96.2314 13.9108 97.5496 12.2135 98.7114C14.7696 94.8452 14.7442 90.4068 15.6691 85.8727C13.08 86.8858 11.3801 88.3829 10.0182 90.2783C8.27774 92.7003 7.38844 95.3896 7.44434 98.3964C7.4977 101.275 7.46467 101.3 4.72816 102.273C3.3561 102.762 1.94085 103.135 0.510345 103.568C0.777134 104.74 1.30309 105.143 2.42615 104.733C3.61019 104.299 4.84251 103.992 6.04941 103.616C7.081 103.296 7.91694 103.43 8.54707 104.428C9.49989 105.937 10.9965 106.736 12.681 107.109C16.3043 107.913 19.8208 107.472 23.1697 105.892C23.7566 105.615 24.2369 105.123 24.9153 104.624C21.2971 101.496 17.4172 99.7927 12.5133 100.602C14.4012 99.1702 16.101 97.8117 17.8923 96.5817C18.2684 96.3246 19.1882 96.312 19.5032 96.5868C21.5969 98.4115 24.0006 98.414 26.4423 97.7965C29.7302 96.9648 32.6877 95.4879 34.8526 92.7634C35.0025 92.5743 35.1092 92.3475 35.2311 92.1459C33.1502 90.3867 27.3977 89.3709 22.3998 92.0022C23.8481 89.9582 25.1948 87.9595 26.6583 86.0466C27.1309 85.4291 27.8347 85.1518 28.7875 85.5072C30.6424 86.1953 32.4972 85.792 34.1487 84.8393C37.3858 82.9742 39.6853 80.2371 41.1971 76.8497C41.3317 76.5473 41.4054 76.2121 41.4816 75.8869C41.5172 75.7307 41.4867 75.5593 41.4867 75.219C36.9538 75.3375 32.9037 76.4036 29.8547 80.0405C30.9041 77.2353 31.9255 74.4201 33.0181 71.6325C33.3052 70.8991 33.8794 70.5034 34.8068 70.5412C36.6362 70.6143 37.993 69.6288 39.1847 68.356C41.7764 65.5862 43.3619 62.2996 44.2893 58.6677C44.3376 58.4762 44.4417 58.2972 44.5205 58.1132C44.5205 57.6092 44.5205 57.1076 44.5205 56.6035L44.5078 56.6061Z"
                                  fill="white"
                                />
                              </svg>
                            </div>

                            <div
                              className="flex flex-col justify-center items-center hover:cursor-pointer "
                           
                            >
                              {openIndex === index ? (
                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  width="50"
                                  height="50"
                                  className="hover:cursor-pointer"
                                  viewBox="0 0 50 50"
                                  fill="none"
                                >
                                  <path
                                    d="M15.4766 29.7618L25.0004 20.238L34.5242 29.7618"
                                    stroke="white"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                  />
                                </svg>
                              ) : (
                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  width="51"
                                  height="51"
                                  viewBox="0 0 51 51"
                                  fill="none"
                                >
                                  <path
                                    d="M35.0242 20.7381L25.5004 30.2619L15.9766 20.7381"
                                    stroke="white"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                  />
                                </svg>
                              )}
                            </div>
                          </div>
                          <div
                            className="flex flex-col justify-center items-center hover:cursor-pointer  h-full md:hidden"
                     
                          >
                            {openIndex === index ? (
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="50"
                                height="50"
                                className="hover:cursor-pointer"
                                viewBox="0 0 50 50"
                                fill="none"
                              >
                                <path
                                  d="M15.4766 29.7618L25.0004 20.238L34.5242 29.7618"
                                  stroke="white"
                                  stroke-linecap="round"
                                  stroke-linejoin="round"
                                />
                              </svg>
                            ) : (
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="51"
                                height="51"
                                viewBox="0 0 51 51"
                                fill="none"
                              >
                                <path
                                  d="M35.0242 20.7381L25.5004 30.2619L15.9766 20.7381"
                                  stroke="white"
                                  stroke-linecap="round"
                                  stroke-linejoin="round"
                                />
                              </svg>
                            )}
                          </div>
                        </div>
                      </div>
                    </div>
                  </AnimatePresence>

                  <AnimatePresence>
                    {openIndex === index && (
                      <motion.div
                        variants={containerVariants}
                        initial="closed"
                        animate="open"
                        exit="closed"
                        className="overflow-hidden"
                      >
                        <div className="flex p-5 h-full w-full transition-opacity ">
                          <div>
                            <div className="md:w-[120px] "></div>
                          </div>
                          <div className="w-auto  h-full flex flex-col items-start justify-normal md:gap-[18px]  md:px-0 px-2">
                            {data.attributes.Sponser.map(
                              (data: SponserDetails, index: number) => (
                                <div key={index} className=" w-full f ">
                                  <div
                                    className=" md:text-[30px] md:mt-0 mt-2 font-archive  md:font-light  md:leading-[42px] text-base font-thin  leading-snug "
                                    style={backgroundGradient}
                                  >
                                    {data.AwardSponser}
                                  </div>
                                  {data.Details.map((data, index: number) => (
                                    <div
                                      key={index}
                                      className="md:text-[22px] text-white font-light font-archive  md:leading-[39.2px] text-[18px] leading-[25.2px] "
                                    >
                                      {data.AwardRecipient} - {data.AwardTitle}
                                    </div>
                                  ))}
                                </div>
                              )
                            )}
                          </div>
                        </div>
                      </motion.div>
                    )}
                  </AnimatePresence>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default SectionsA2;
